create extension if not exists "postgis" with schema "extensions";


create table "public"."avoidance_area_reports" (
    "id" uuid not null default gen_random_uuid(),
    "avoidance_area_id" uuid,
    "title" text not null,
    "description" text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp without time zone not null default now()
);


alter table "public"."avoidance_area_reports" enable row level security;

create table "public"."avoidance_areas" (
    "id" uuid not null default gen_random_uuid(),
    "user_id" uuid,
    "name" text,
    "boundary" geometry(Polygon,4326) not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone default now()
);


create table "public"."user_common_locations" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid,
    "label" text not null,
    "location" geography not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp without time zone
);


alter table "public"."user_common_locations" enable row level security;

create table "public"."user_navigation_preferences" (
    "id" uuid not null default gen_random_uuid(),
    "user_id" uuid,
    "avoid_areas" boolean default true,
    "gradient_tolerance" numeric default 0.05,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp without time zone not null default now()
);


alter table "public"."user_navigation_preferences" enable row level security;

create table "public"."user_profiles" (
    "id" uuid not null default gen_random_uuid(),
    "user_id" uuid,
    "display_name" text,
    "avatar_url" text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp without time zone not null default now()
);


alter table "public"."user_profiles" enable row level security;

CREATE UNIQUE INDEX avoidance_area_reports_pkey ON public.avoidance_area_reports USING btree (id);

CREATE INDEX avoidance_areas_boundary_idx ON public.avoidance_areas USING gist (boundary);

CREATE UNIQUE INDEX avoidance_areas_pkey ON public.avoidance_areas USING btree (id);

CREATE UNIQUE INDEX navigation_preferences_pkey ON public.user_navigation_preferences USING btree (id);

CREATE UNIQUE INDEX profiles_pkey ON public.user_profiles USING btree (id);

CREATE UNIQUE INDEX user_common_locations_pkey ON public.user_common_locations USING btree (id);

alter table "public"."avoidance_area_reports" add constraint "avoidance_area_reports_pkey" PRIMARY KEY using index "avoidance_area_reports_pkey";

alter table "public"."avoidance_areas" add constraint "avoidance_areas_pkey" PRIMARY KEY using index "avoidance_areas_pkey";

alter table "public"."user_common_locations" add constraint "user_common_locations_pkey" PRIMARY KEY using index "user_common_locations_pkey";

alter table "public"."user_navigation_preferences" add constraint "navigation_preferences_pkey" PRIMARY KEY using index "navigation_preferences_pkey";

alter table "public"."user_profiles" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."avoidance_area_reports" add constraint "avoidance_area_reports_avoidance_area_id_fkey" FOREIGN KEY (avoidance_area_id) REFERENCES avoidance_areas(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."avoidance_area_reports" validate constraint "avoidance_area_reports_avoidance_area_id_fkey";

alter table "public"."avoidance_areas" add constraint "avoidance_areas_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."avoidance_areas" validate constraint "avoidance_areas_user_id_fkey";

alter table "public"."user_common_locations" add constraint "user_common_locations_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."user_common_locations" validate constraint "user_common_locations_user_id_fkey";

alter table "public"."user_navigation_preferences" add constraint "navigation_preferences_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."user_navigation_preferences" validate constraint "navigation_preferences_user_id_fkey";

alter table "public"."user_profiles" add constraint "profiles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."user_profiles" validate constraint "profiles_user_id_fkey";

set check_function_bodies = off;

create or replace view "public"."avoidance_areas_with_geojson" as  SELECT id,
    name,
    (st_asgeojson(boundary))::json AS boundary,
    created_at,
    updated_at
   FROM avoidance_areas;


CREATE OR REPLACE FUNCTION public.insert_avoidance_area(p_name text, p_wkt text)
 RETURNS uuid
 LANGUAGE sql
AS $function$
  insert into public.avoidance_areas (
    name,
    boundary
  )
  values (
    p_name,
    ST_GeomFromText(p_wkt, 4326)
  )
  returning id;
$function$
;

grant delete on table "public"."avoidance_area_reports" to "anon";

grant insert on table "public"."avoidance_area_reports" to "anon";

grant references on table "public"."avoidance_area_reports" to "anon";

grant select on table "public"."avoidance_area_reports" to "anon";

grant trigger on table "public"."avoidance_area_reports" to "anon";

grant truncate on table "public"."avoidance_area_reports" to "anon";

grant update on table "public"."avoidance_area_reports" to "anon";

grant delete on table "public"."avoidance_area_reports" to "authenticated";

grant insert on table "public"."avoidance_area_reports" to "authenticated";

grant references on table "public"."avoidance_area_reports" to "authenticated";

grant select on table "public"."avoidance_area_reports" to "authenticated";

grant trigger on table "public"."avoidance_area_reports" to "authenticated";

grant truncate on table "public"."avoidance_area_reports" to "authenticated";

grant update on table "public"."avoidance_area_reports" to "authenticated";

grant delete on table "public"."avoidance_area_reports" to "service_role";

grant insert on table "public"."avoidance_area_reports" to "service_role";

grant references on table "public"."avoidance_area_reports" to "service_role";

grant select on table "public"."avoidance_area_reports" to "service_role";

grant trigger on table "public"."avoidance_area_reports" to "service_role";

grant truncate on table "public"."avoidance_area_reports" to "service_role";

grant update on table "public"."avoidance_area_reports" to "service_role";

grant delete on table "public"."avoidance_areas" to "anon";

grant insert on table "public"."avoidance_areas" to "anon";

grant references on table "public"."avoidance_areas" to "anon";

grant select on table "public"."avoidance_areas" to "anon";

grant trigger on table "public"."avoidance_areas" to "anon";

grant truncate on table "public"."avoidance_areas" to "anon";

grant update on table "public"."avoidance_areas" to "anon";

grant delete on table "public"."avoidance_areas" to "authenticated";

grant insert on table "public"."avoidance_areas" to "authenticated";

grant references on table "public"."avoidance_areas" to "authenticated";

grant select on table "public"."avoidance_areas" to "authenticated";

grant trigger on table "public"."avoidance_areas" to "authenticated";

grant truncate on table "public"."avoidance_areas" to "authenticated";

grant update on table "public"."avoidance_areas" to "authenticated";

grant delete on table "public"."avoidance_areas" to "service_role";

grant insert on table "public"."avoidance_areas" to "service_role";

grant references on table "public"."avoidance_areas" to "service_role";

grant select on table "public"."avoidance_areas" to "service_role";

grant trigger on table "public"."avoidance_areas" to "service_role";

grant truncate on table "public"."avoidance_areas" to "service_role";

grant update on table "public"."avoidance_areas" to "service_role";

grant delete on table "public"."user_common_locations" to "anon";

grant insert on table "public"."user_common_locations" to "anon";

grant references on table "public"."user_common_locations" to "anon";

grant select on table "public"."user_common_locations" to "anon";

grant trigger on table "public"."user_common_locations" to "anon";

grant truncate on table "public"."user_common_locations" to "anon";

grant update on table "public"."user_common_locations" to "anon";

grant delete on table "public"."user_common_locations" to "authenticated";

grant insert on table "public"."user_common_locations" to "authenticated";

grant references on table "public"."user_common_locations" to "authenticated";

grant select on table "public"."user_common_locations" to "authenticated";

grant trigger on table "public"."user_common_locations" to "authenticated";

grant truncate on table "public"."user_common_locations" to "authenticated";

grant update on table "public"."user_common_locations" to "authenticated";

grant delete on table "public"."user_common_locations" to "service_role";

grant insert on table "public"."user_common_locations" to "service_role";

grant references on table "public"."user_common_locations" to "service_role";

grant select on table "public"."user_common_locations" to "service_role";

grant trigger on table "public"."user_common_locations" to "service_role";

grant truncate on table "public"."user_common_locations" to "service_role";

grant update on table "public"."user_common_locations" to "service_role";

grant delete on table "public"."user_navigation_preferences" to "anon";

grant insert on table "public"."user_navigation_preferences" to "anon";

grant references on table "public"."user_navigation_preferences" to "anon";

grant select on table "public"."user_navigation_preferences" to "anon";

grant trigger on table "public"."user_navigation_preferences" to "anon";

grant truncate on table "public"."user_navigation_preferences" to "anon";

grant update on table "public"."user_navigation_preferences" to "anon";

grant delete on table "public"."user_navigation_preferences" to "authenticated";

grant insert on table "public"."user_navigation_preferences" to "authenticated";

grant references on table "public"."user_navigation_preferences" to "authenticated";

grant select on table "public"."user_navigation_preferences" to "authenticated";

grant trigger on table "public"."user_navigation_preferences" to "authenticated";

grant truncate on table "public"."user_navigation_preferences" to "authenticated";

grant update on table "public"."user_navigation_preferences" to "authenticated";

grant delete on table "public"."user_navigation_preferences" to "service_role";

grant insert on table "public"."user_navigation_preferences" to "service_role";

grant references on table "public"."user_navigation_preferences" to "service_role";

grant select on table "public"."user_navigation_preferences" to "service_role";

grant trigger on table "public"."user_navigation_preferences" to "service_role";

grant truncate on table "public"."user_navigation_preferences" to "service_role";

grant update on table "public"."user_navigation_preferences" to "service_role";

grant delete on table "public"."user_profiles" to "anon";

grant insert on table "public"."user_profiles" to "anon";

grant references on table "public"."user_profiles" to "anon";

grant select on table "public"."user_profiles" to "anon";

grant trigger on table "public"."user_profiles" to "anon";

grant truncate on table "public"."user_profiles" to "anon";

grant update on table "public"."user_profiles" to "anon";

grant delete on table "public"."user_profiles" to "authenticated";

grant insert on table "public"."user_profiles" to "authenticated";

grant references on table "public"."user_profiles" to "authenticated";

grant select on table "public"."user_profiles" to "authenticated";

grant trigger on table "public"."user_profiles" to "authenticated";

grant truncate on table "public"."user_profiles" to "authenticated";

grant update on table "public"."user_profiles" to "authenticated";

grant delete on table "public"."user_profiles" to "service_role";

grant insert on table "public"."user_profiles" to "service_role";

grant references on table "public"."user_profiles" to "service_role";

grant select on table "public"."user_profiles" to "service_role";

grant trigger on table "public"."user_profiles" to "service_role";

grant truncate on table "public"."user_profiles" to "service_role";

grant update on table "public"."user_profiles" to "service_role";


